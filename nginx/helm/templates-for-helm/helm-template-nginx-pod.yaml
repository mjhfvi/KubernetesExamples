---
apiVersion: v1
kind: Pod
metadata:
  # creationTimestamp: "2024-01-30T17:57:37Z"
  # generateName: pod-nginx-5c45bc87-
  labels:
    app.kubernetes.io/instance: pod-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    app.kubernetes.io/version: 1.25.3
    helm.sh/chart: nginx-15.10.1
    # pod-template-hash: 5c45bc87
  name: pod-nginx
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pod-nginx
  #   uid: 15e5cd88-a180-41fa-bde2-18648be58c30
# resourceVersion: "19799"
# uid: 82ad1245-0b54-4243-87b2-3099ff0570b7
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: pod-nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
          weight: 1
  automountServiceAccountToken: false
  containers:
    - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: NGINX_HTTP_PORT_NUMBER
          value: '8080'
      image: docker.io/bitnami/nginx:1.25.3-debian-11-r6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: http
        timeoutSeconds: 5
      name: nginx
      ports:
        - containerPort: 8080
          name: http
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: http
        timeoutSeconds: 3
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: [ALL]
        privileged: false
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: docker-desktop
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
    fsGroupChangePolicy: Always
  serviceAccount: pod-nginx
  serviceAccountName: pod-nginx
  shareProcessNamespace: false
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
# status:
#   conditions:
#   - lastProbeTime: null
#     lastTransitionTime: "2024-01-30T17:57:37Z"
#     status: "True"
#     type: Initialized
#   - lastProbeTime: null
#     lastTransitionTime: "2024-01-30T17:57:57Z"
#     status: "True"
#     type: Ready
#   - lastProbeTime: null
#     lastTransitionTime: "2024-01-30T17:57:57Z"
#     status: "True"
#     type: ContainersReady
#   - lastProbeTime: null
#     lastTransitionTime: "2024-01-30T17:57:37Z"
#     status: "True"
#     type: PodScheduled
#   containerStatuses:
#   - containerID: docker://bee7bf77016b563b813bb78e3fc50350602ddf8af5da4711f03ce005e7c3f040
#     image: bitnami/nginx:1.25.3-debian-11-r6
#     imageID: docker-pullable://bitnami/nginx@sha256:586c6ef496f39b19d0ccf4f16f30170b89f86b94c9964d4acc0c7cb19434a5d3
#     lastState: {}
#     name: nginx
#     ready: true
#     restartCount: 0
#     started: true
#     state:
#       running:
#         startedAt: "2024-01-30T17:57:48Z"
#   hostIP: 192.168.65.3
#   phase: Running
#   podIP: 10.1.0.30
#   podIPs:
#   - ip: 10.1.0.30
#   qosClass: BestEffort
#   startTime: "2024-01-30T17:57:37Z"
