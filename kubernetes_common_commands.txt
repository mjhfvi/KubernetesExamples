# make sure the kubectl is running
sudo systemctl status kubectl

# check status of all the nodes
kubectl describe nodes

# check status of a node
kubectl describe node ops02

kubectl get all --all-namespaces
kubectl api-resources -o wide

# remove node: https://stackoverflow.com/questions/35757620/how-to-gracefully-remove-a-node-from-kubernetes
# check why pod in pending
kubectl describe pods

kubectl patch statefulset <statefulset_name> --type='json' -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/image", "value":"<new_image_name>"}]'

example:
kubectl patch statefulset jenkins --type='json' -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/image", "value":"jenkins/jenkins:2.446-alpine-jdk21"}]'

kubectl delete pv pvc-801f9b69-c0ca-4833-8740-b4a7bff96cbf --grace-period=0 --force
kubectl -n jenkins patch pv pvc-801f9b69-c0ca-4833-8740-b4a7bff96cbf -p '{"metadata": {"finalizers": null}}'
kubectl -n jenkins patch pv pvc-9d3bc27c-e590-442d-9772-7efc11cb56d6  --type='json' -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/image", "value":"jenkins/jenkins:2.446-alpine-jdk21"}]'

kubectl expose pod elastic-operator-0 --type=LoadBalancer --port=5601 --target-port=9443 --name=kibana-http -n elastic-system

kubectl port-forward service/quickstart-kb-http 5601

kubectl config set-context --current --namespace=default
kubectl config set-context --current --namespace=elastic

kubectl exec pod/busybox1 -- cat /etc/resolv.conf
kubectl exec pod/busybox1 -- lookup 8.8.8.8

kubectl scale statefulset.apps/jenkins --replicas=1 -n jenkins

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.0/deploy/static/provider/cloud/deploy.yaml
kubectl get pods --namespace ingress-nginx
kubectl get service ingress-nginx-controller --namespace=ingress-nginx

kubectl -n kubernetes-dashboard get secret kubernetes-dashboard-csrf -o jsonpath="{.data.private.key}" | base64 -d
TOKEN=$(kubectl describe secret -n kube-system $(kubectl get secret -n kube-system | awk '/^cluster-admin-dashboard-sa-token-/{print $1}') | awk '$1=="token:"{print $2}')

kubectl -n kubernetes-dashboard create token dashboard-user

kubectl delete all --all
kubectl delete all --all -n {namespace}

kubectl delete CustomResourceDefinition $(kubectl get CustomResourceDefinition -A | grep "splunk.com" | awk '{print $1}')
