# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: argo-cd-service
#   namespace: argo-cd
# spec:
#   type: NodePort  # LoadBalancer, NodePort
#   ports:
#     - name: http
#       protocol: TCP
#       port: 80
#       # Port exposes the Kubernetes service on the specified port within the cluster.
#       # Other pods within the cluster can communicate with this server on the specified port.
#       targetPort: 8081
#       # Optional field, By default and for convenience, the Kubernetes control plane
#       # will allocate a port from a range (default: 30000-32767)
#       # TargetPort is the port on which the service will send requests to, that your pod will be listening on.
#       # Your application in the container will need to be listening on this port also.
#       nodePort: 32453
#       # NodePort exposes a service externally to the cluster by means of the target nodes IP address and the NodePort.
#       # NodePort is the default setting if the port field is not specified.
#     - name: https
#       protocol: TCP
#       port: 8082
#       # targetPort: 9377
#       nodePort: 30007

#     # - port: 8080
#     #   protocol: TCP
#     #   targetPort: 8080
#   selector:
#     app.kubernetes.io/name: argocd-server

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo-cd-ingress
  namespace: argo-cd
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  rules:
    - host: argocd.localhost
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: argo-cd-argocd-server
                port:
                  name: https
